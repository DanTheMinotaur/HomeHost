---
# Roles to setup basic systemd scripts with timers
- name: Set Variables
  set_fact:
    scripts_dir: "/usr/local/bin"
    systemd_path: "/etc/systemd/system"
    script_name: "{{ script | basename | split('.') | first }}"

    service_name: "{{ script | basename | split('.') | first }}.service"
    timer_name: "{{ script | basename | split('.') | first }}.timer"

- name: Format Sub Name
  set_fact:
    script_name: >-
      {{ script_name | default('') }}{% if script_name and job_name %}_{% endif %}{{ job_name | default('') }}
  when: job_name is defined

- name: Set systemd job/timer variables
  set_fact:
    service_name: "{{ script_name }}.service"
    timer_name: "{{ script_name }}.timer"

# - name: Systemd Script and Timer Names
#   debug:
#     msg: "Script: {{ script_name }}; Service: {{service_name}}; Timer: {{timer_name}}"

- name: "Copy {{ script }}"
  ansible.builtin.copy:
    src: "{{ script }}"
    dest: "{{ scripts_dir }}/"
    mode: o+rx
  when: script is defined
  become: true

- name: "Copy {{ service_name }}"
  ansible.builtin.template:
    src: "scripts/systemd/script.service.j2"
    dest: "{{ systemd_path }}/{{ service_name }}"
  vars:
    script_path: "{{ scripts_dir }}/{{ script | basename }}"
    wanted_timer: "{{ timer_name if timer is defined else '' }}"
    arguments: "{{ args if args is defined else '' }}"
  register: copied_service
  when: script is defined
  become: true

- name: "Setup {{ service_name }} in systemd"  
  ansible.builtin.systemd:
    name: "{{ service_name }}"
    enabled: "{{ false if timer is defined else true }}"
    daemon_reload: true
    # state: started
  become: true
  when: copied_service is defined

- name: "Copy {{ timer_name }}"
  ansible.builtin.template:
    src: "scripts/systemd/timer.j2"
    dest: "{{ systemd_path }}/{{ timer_name }}"
  vars:
    service_timer: "{{ timer }}"
    service: "{{ service_name }}"
  register: copied_timer
  when: timer is defined
  become: true

- name: "Enable {{ timer_name }}"
  ansible.builtin.systemd:
    name: "{{ timer_name }}"
    enabled: true
    daemon_reload: true
  become: true
  when: timer is defined